name: Build and Publish
on:
  push:
    branches:
      - master
    tags:
      - "v*.*.*"

jobs:
  extension:
    runs-on: ubuntu-latest
    name: Build extension
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: actions/upload-artifact@v3
        with:
          name: moodle-breaker-ext-${{github.ref_name}}
          path: moodle-breaker-ext

  server-image:
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          - linux/arm/v6
          - linux/arm/v7
          - linux/arm64
    runs-on: ubuntu-latest
    needs: extension
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          # list of Docker images to use as base name for tags
          images: ghcr.io/${{ github.repository }}
          # generate Docker tags based on the following events/attributes
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha

      - name: Replace extension version in update manifest
        uses: jacobtomlinson/gha-find-replace@v3
        with:
          find: "0.0.1"
          replace: "${{github.ref_name}}"
          include: "dist/extension/updates.*"
          regex: true

      - name: Get extension artifact
        uses: actions/download-artifact@v3
        with:
          name: moodle-breaker-ext-${{github.ref_name}}
          path: mb-server/dist/extension

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: mb-server
          push: true
          platforms: ${{ matrix.platform }}
          labels: ${{ steps.meta.outputs.labels }}
          sbom: true
          provenance: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: ${{ steps.meta.outputs.tags }}
